name: Deploy Notification CI/CD

on:
  push:
    branches: [ "main", "master" ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Deploy on server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_NAME }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            cd /home/Notification
            
            echo "=== Starting Notification Service deployment ==="
            
            # Сохраняем текущее состояние
            echo "=== Saving current state ==="
            docker-compose ps
            
            # Быстрая остановка сервисов
            echo "=== Quick shutdown of existing services ==="
            docker-compose down --timeout 10 || true
            docker-compose rm -f || true
            docker system prune -f || true
            
            # Быстрая проверка портов
            echo "=== Checking port availability ==="
            if lsof -i :8080 > /dev/null 2>&1; then
              echo "❌ Port 8080 is in use, forcing cleanup"
              lsof -ti :8080 | xargs kill -9 || true
              sleep 2
            fi
            
            # Обновляем код с merge strategy
            echo "=== Updating code ==="
            git config --global --add safe.directory /home/Notification
            git fetch origin
            git stash  # Сохраняем локальные изменения
            git pull origin main --rebase
            git stash pop || true  # Восстанавливаем если есть
            
            # Проверяем конфигурацию
            echo "=== Checking configuration ==="
            if [ ! -f .env ]; then
              echo "❌ .env file not found, copying from example"
              cp env.example .env || echo "No env.example found"
            fi
            
            # Быстрая сборка и запуск
            echo "=== Quick build and start ==="
            DOCKER_BUILDKIT=1 docker-compose up -d --build --force-recreate || docker-compose up -d notification-service
            
            # Проверяем логи если есть проблемы
            echo "=== Checking logs for errors ==="
            docker-compose logs --tail=10 || true
            
            # Быстрая проверка запуска
            echo "=== Quick startup check ==="
            sleep 5
            
            # Проверяем статус контейнеров
            echo "=== Checking container status ==="
            docker-compose ps
            
            # Быстрый health check
            echo "=== Quick health check ==="
            for i in {1..5}; do
              if curl -f http://localhost:8080/health > /dev/null 2>&1; then
                echo "✅ Notification Service is healthy after deployment"
                break
              else
                echo "⏳ Waiting for service... (attempt $i/5)"
                if [ $i -eq 5 ]; then
                  echo "⚠️ Service may still be starting, checking logs..."
                  docker-compose logs --tail=10 notification-service
                  # Не выходим с ошибкой, возможно сервис еще запускается
                fi
                sleep 5
              fi
            done
            
            # Быстрая финальная проверка
            echo "=== Quick final check ==="
            docker-compose ps
            docker-compose logs --tail=5 notification-service | grep -i error || echo "No errors found"
            
            echo "=== Notification Service deployment completed ==="