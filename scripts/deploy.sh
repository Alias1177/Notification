#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –¥–µ–ø–ª–æ—è Notification Service
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./scripts/deploy.sh [fast|optimized|cached]

set -e

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
log_info() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

log_success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

log_warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

log_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
BUILD_TYPE=${1:-fast}

case $BUILD_TYPE in
    fast|optimized|cached)
        log_info "–¢–∏–ø —Å–±–æ—Ä–∫–∏: $BUILD_TYPE"
        ;;
    *)
        log_error "–ù–µ–≤–µ—Ä–Ω—ã–π —Ç–∏–ø —Å–±–æ—Ä–∫–∏. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: fast, optimized, cached"
        exit 1
        ;;
esac

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö —Ñ–∞–π–ª–æ–≤
log_info "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤ –ø—Ä–æ–µ–∫—Ç–∞..."
if [ ! -f "docker-compose.yml" ]; then
    log_error "docker-compose.yml –Ω–µ –Ω–∞–π–¥–µ–Ω!"
    exit 1
fi

if [ ! -f "Dockerfile" ]; then
    log_error "Dockerfile –Ω–µ –Ω–∞–π–¥–µ–Ω!"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ .env —Ñ–∞–π–ª–∞
if [ ! -f ".env" ]; then
    log_warning ".env —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω, –∫–æ–ø–∏—Ä—É–µ–º –∏–∑ –ø—Ä–∏–º–µ—Ä–∞..."
    if [ -f "env.example" ]; then
        cp env.example .env
        log_success ".env —Ñ–∞–π–ª —Å–æ–∑–¥–∞–Ω –∏–∑ env.example"
    else
        log_warning "env.example –Ω–µ –Ω–∞–π–¥–µ–Ω, —Å–æ–∑–¥–∞–µ–º –±–∞–∑–æ–≤—ã–π .env"
        cat > .env << EOF
# Notification Service Environment Variables
MAIL=your-email@gmail.com
SECRET=your-app-password
SMTP_HOST=smtp.gmail.com
SMTP_PORT=587
APP_ENV=production
EOF
    fi
fi

# –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
log_info "–û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
docker-compose down --timeout 30 || true

# –û—á–∏—Å—Ç–∫–∞
log_info "–û—á–∏—Å—Ç–∫–∞ Docker –∫—ç—à–∞..."
docker system prune -f || true

# –°–±–æ—Ä–∫–∞ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞
log_info "–ù–∞—á–∏–Ω–∞–µ–º —Å–±–æ—Ä–∫—É (—Ç–∏–ø: $BUILD_TYPE)..."
case $BUILD_TYPE in
    fast)
        DOCKER_BUILDKIT=1 docker-compose build notification-service
        ;;
    optimized)
        DOCKER_BUILDKIT=1 docker-compose build --no-cache notification-service
        ;;
    cached)
        DOCKER_BUILDKIT=1 docker-compose build \
            --build-arg BUILDKIT_INLINE_CACHE=1 \
            notification-service
        ;;
esac

# –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤
log_info "–ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤..."
docker-compose up -d

# –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞
log_info "–û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤..."
sleep 15

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞
log_info "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
docker-compose ps

# Health check
log_info "–ü—Ä–æ–≤–µ—Ä–∫–∞ health endpoint..."
for i in {1..10}; do
    if curl -f http://localhost:8080/health > /dev/null 2>&1; then
        log_success "‚úÖ Notification Service –∑–¥–æ—Ä–æ–≤!"
        break
    else
        log_warning "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–∏—Å–∞... (–ø–æ–ø—ã—Ç–∫–∞ $i/10)"
        if [ $i -eq 10 ]; then
            log_error "‚ùå –°–µ—Ä–≤–∏—Å –Ω–µ —Å—Ç–∞–ª –≥–æ—Ç–æ–≤—ã–º –ø–æ—Å–ª–µ 10 –ø–æ–ø—ã—Ç–æ–∫"
            log_info "–ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–æ–≤..."
            docker-compose logs --tail=20 notification-service
            exit 1
        fi
        sleep 10
    fi
done

# –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
log_info "–§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞..."
docker-compose ps

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–∑–º–µ—Ä–∞ –æ–±—Ä–∞–∑–∞
log_info "–†–∞–∑–º–µ—Ä –æ–±—Ä–∞–∑–∞:"
docker images notification-service --format "table {{.Repository}}\t{{.Tag}}\t{{.Size}}"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–æ–≤ –Ω–∞ –æ—à–∏–±–∫–∏
log_info "–ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–æ–≤ –Ω–∞ –æ—à–∏–±–∫–∏..."
if docker-compose logs --tail=10 notification-service | grep -i error; then
    log_warning "–ù–∞–π–¥–µ–Ω—ã –æ—à–∏–±–∫–∏ –≤ –ª–æ–≥–∞—Ö"
else
    log_success "–û—à–∏–±–æ–∫ –≤ –ª–æ–≥–∞—Ö –Ω–µ –Ω–∞–π–¥–µ–Ω–æ"
fi

log_success "üéâ –î–µ–ø–ª–æ–π Notification Service –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!"
log_info "–°–µ—Ä–≤–∏—Å –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É: http://localhost:8080"
log_info "Health endpoint: http://localhost:8080/health" 