# –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
IMAGE_NAME = notification-service
TAG = latest

# –û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã
.PHONY: help build build-fast build-optimized clean test docker-build docker-push

# –ü–æ–º–æ—â—å
help:
	@echo "–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è Notification Service:"
	@echo "  build-fast        - –ë—ã—Å—Ç—Ä–∞—è —Å–±–æ—Ä–∫–∞ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏"
	@echo "  build-optimized   - –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Å–±–æ—Ä–∫–∞ –¥–ª—è production"
	@echo "  build-cached      - –°–±–æ—Ä–∫–∞ —Å –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ–º (BuildKit)"
	@echo "  clean            - –û—á–∏—Å—Ç–∫–∞ Docker –∫—ç—à–∞"
	@echo "  test             - –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤"
	@echo "  dev              - –õ–æ–∫–∞–ª—å–Ω–∞—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞"
	@echo "  deploy           - Production –¥–µ–ø–ª–æ–π"
	@echo "  logs             - –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤"
	@echo "  status           - –°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤"
	@echo "  health           - –ü—Ä–æ–≤–µ—Ä–∫–∞ health endpoints"
	@echo "  size             - –†–∞–∑–º–µ—Ä –æ–±—Ä–∞–∑–∞"

# –ë—ã—Å—Ç—Ä–∞—è —Å–±–æ—Ä–∫–∞ (–¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏)
build-fast:
	@echo "üöÄ –ë—ã—Å—Ç—Ä–∞—è —Å–±–æ—Ä–∫–∞ Notification Service..."
	DOCKER_BUILDKIT=1 docker-compose build notification-service
	@echo "–°–±–æ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞"

# –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Å–±–æ—Ä–∫–∞ (–¥–ª—è production)
build-optimized:
	@echo "‚ö° –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Å–±–æ—Ä–∫–∞ Notification Service..."
	DOCKER_BUILDKIT=1 docker-compose build --no-cache notification-service
	@echo "–°–±–æ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞"

# –°–±–æ—Ä–∫–∞ —Å –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ–º (—Ç—Ä–µ–±—É–µ—Ç BuildKit)
build-cached:
	@echo "üíæ –°–±–æ—Ä–∫–∞ —Å –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ–º..."
	DOCKER_BUILDKIT=1 docker-compose build \
		--build-arg BUILDKIT_INLINE_CACHE=1 \
		notification-service
	@echo "–°–±–æ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞"

# –û—á–∏—Å—Ç–∫–∞
clean:
	@echo "üßπ –û—á–∏—Å—Ç–∫–∞ Docker –∫—ç—à–∞..."
	docker system prune -f
	docker builder prune -f
	@echo "–ö—ç—à –æ—á–∏—â–µ–Ω"

# –¢–µ—Å—Ç—ã
test:
	@echo "üß™ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤..."
	go test -v ./...

# –õ–æ–∫–∞–ª—å–Ω–∞—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞
dev:
	@echo "üîß –ó–∞–ø—É—Å–∫ –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏..."
	docker-compose up --build

# Production –¥–µ–ø–ª–æ–π
deploy:
	@echo "üöÄ Production –¥–µ–ø–ª–æ–π..."
	docker-compose up -d --build

# –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥
logs:
	docker-compose logs -f notification-service

# –°—Ç–∞—Ç—É—Å
status:
	@echo "üìä –°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤:"
	docker-compose ps

# Health check
health:
	@echo "üè• –ü—Ä–æ–≤–µ—Ä–∫–∞ health endpoints:"
	@echo "Notification Service: http://localhost:8080/health"
	@curl -s http://localhost:8080/health | jq . || echo "Notification service –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"

# –†–∞–∑–º–µ—Ä –æ–±—Ä–∞–∑–∞
size:
	@echo "üìä –†–∞–∑–º–µ—Ä –æ–±—Ä–∞–∑–∞:"
	docker images $(IMAGE_NAME) --format "table {{.Repository}}\t{{.Tag}}\t{{.Size}}"

# –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫
restart:
	@echo "üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–∞..."
	docker-compose restart notification-service
	@echo "–°–µ—Ä–≤–∏—Å –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω"

# –û—Å—Ç–∞–Ω–æ–≤–∫–∞
stop:
	@echo "‚èπÔ∏è –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤..."
	docker-compose down

# –ü–æ–ª–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞
clean-all:
	@echo "üßπ –ü–æ–ª–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ –≤—Å–µ—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤ –∏ –æ–±—Ä–∞–∑–æ–≤..."
	docker-compose down -v
	docker system prune -af
	docker volume prune -f
	@echo "–ü–æ–ª–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Ä—Ç–æ–≤
ports:
	@echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–Ω—è—Ç—ã—Ö –ø–æ—Ä—Ç–æ–≤:"
	@netstat -tlnp | grep -E ':(8080)' || echo "–ü–æ—Ä—Ç—ã —Å–≤–æ–±–æ–¥–Ω—ã" 